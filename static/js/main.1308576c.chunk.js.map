{"version":3,"sources":["Component/types/index.js","Component/App/App.jsx","Component/actions/index.js","Component/reducer/index.js","index.js"],"names":["ADD_REMINDER","type","REMOVE_REMINDER","CLEAR_REMINDERS","App","state","text","date","Date","mapOnData","data","props","className","map","dataItem","moment","fromNow","onClick","RemoveFunction","id","value","this","placeholderText","onFocus","e","target","placeholder","onChange","setState","selected","showTimeSelect","AddFunction","ClearFunction","Component","connect","action","console","log","Reminder","read_cookie","reminders","Math","random","bake_cookie","filter","reminder","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"4NAAaA,EAAe,CAC1BC,KAAM,gBAGKC,EAAkB,CAC7BD,KAAM,mBAGKE,EAAkB,CAC7BF,KAAM,mB,kCCDFG,G,wNACJC,MAAQ,CACNC,KAAM,GACNC,KAAM,IAAIC,M,EAGZC,UAAY,WAAO,IACTC,EAAS,EAAKC,MAAdD,KACR,OACE,oBAAIE,UAAU,aAAd,SACGF,EAAKG,KAAI,SAACC,GACT,OACE,qBAEEF,UAAU,0DAFZ,UAIE,sBAAMA,UAAU,2CAAhB,SACGE,EAASR,OAEZ,sBAAMM,UAAU,8CAAhB,SACGG,IAAO,IAAIP,KAAKM,EAASP,OAAOS,YAEnC,sBAAMC,QAAS,kBAAM,EAAKN,MAAMO,eAAeJ,EAASK,KAAxD,SACE,mBAAGP,UAAU,4BAVVE,EAASK,U,uDAkBhB,IAAD,OACP,OACE,sBAAMP,UAAU,MAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAU,mBAEf,oBAAIA,UAAU,cAAd,mCACA,uBACEX,KAAK,OACLmB,MAAOC,KAAKhB,MAAMC,KAClBgB,gBAAgB,mBAChBC,QAAS,SAACC,GAAD,OAAQA,EAAEC,OAAOC,YAAc,IACxCC,SAAU,SAACH,GAAD,OAAO,EAAKI,SAAS,CAAEtB,KAAMkB,EAAEC,OAAOL,WAElD,cAAC,IAAD,CACEE,gBAAgB,aAChBO,SAAUR,KAAKhB,MAAME,KACrBa,MAAOC,KAAKhB,MAAME,KAClBoB,SAAU,SAACpB,GAAD,OAAU,EAAKqB,SAAS,CAAErB,KAAMA,KAC1CuB,gBAAc,IAGhB,wBACElB,UAAU,4BACVK,QAAS,WACP,EAAKN,MAAMoB,YAAY,EAAK1B,MAAMC,KAAM,EAAKD,MAAME,MACnD,EAAKqB,SAAS,CACZtB,KAAM,GACNC,KAAM,MANZ,iBAYCc,KAAKZ,YACN,wBACEG,UAAU,2BACVK,QAASI,KAAKV,MAAMqB,cAFtB,8B,GApEMC,cAyFHC,mBAHf,SAAyB7B,GACvB,MAAO,CAAEK,KAAML,KAEuB,CACtC0B,YCjGyB,SAACzB,EAAMC,GAChC,IAAM4B,EAAS,CACblC,KAAMD,EACNM,OACAC,QAGF,OADA6B,QAAQC,IAAI,eAAgBF,GACrBA,GD2FPjB,eCxF4B,SAACC,GAK7B,MAJe,CACblB,KAAMC,EACNiB,ODsFFa,cClF2B,WAI3B,MAHe,CACb/B,KAAME,KD6EK+B,CAIZ9B,G,gBE1EYkC,EAzBE,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAI8B,EAAW,uCACvC9B,EAAQkC,sBAAY,aACpB,IAAIC,EAAY,KAChB,OAAIL,EAAOlC,OAASD,GAClBwC,EAAS,sBACJnC,GADI,CAEP,CAAEC,KAAM6B,EAAO7B,KAAMC,KAAM4B,EAAO5B,KAAMY,GAAIsB,KAAKC,YAEnDC,sBAAY,YAAaH,GACzBJ,QAAQC,IAAI,eAAgBG,GACrBA,GACEL,EAAOlC,OAASC,GACzBsC,EAAYnC,EAAMuC,QAAO,SAACC,GAAD,OAAcA,EAAS1B,KAAOgB,EAAOhB,MAC9DwB,sBAAY,YAAaH,GAElBA,GACEL,EAAOlC,OAASE,GACzBwC,sBAAY,YAAaH,GACzBA,EAAY,IAGLnC,GCfLyC,G,cAAQC,YAAYT,IAE1BU,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.1308576c.chunk.js","sourcesContent":["export const ADD_REMINDER = {\n  type: 'ADD_REMINDER',\n}\n\nexport const REMOVE_REMINDER = {\n  type: 'REMOVE_REMINDER',\n}\n\nexport const CLEAR_REMINDERS = {\n  type: 'CLEAR_REMINDERS',\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { AddFunction, ClearFunction, RemoveFunction } from '../actions/index'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport '@fortawesome/fontawesome-free'\n\nclass App extends Component {\n  state = {\n    text: '',\n    date: new Date(),\n  }\n\n  mapOnData = () => {\n    const { data } = this.props\n    return (\n      <ul className='list-group'>\n        {data.map((dataItem) => {\n          return (\n            <li\n              key={dataItem.id}\n              className='list-group-item d-flex flex-row shadow p-3 mb-3 rounded'\n            >\n              <span className='p-2 bd-highlight border-right border-top'>\n                {dataItem.text}\n              </span>\n              <span className='p-2 bd-highlight border-right border-bottom'>\n                {moment(new Date(dataItem.date)).fromNow()}\n              </span>\n              <span onClick={() => this.props.RemoveFunction(dataItem.id)}>\n                <i className='fas fa-window-close'></i>\n              </span>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n  render() {\n    return (\n      <main className='app'>\n        <div className='container'>\n          <div className='input mb-2'>\n            <div className='icon'>\n              <i className='fab fa-react'></i>\n            </div>\n            <h1 className='text-center'>To Do List & Reminder</h1>\n            <input\n              type='text'\n              value={this.state.text}\n              placeholderText='Add Your Plan !!'\n              onFocus={(e) => (e.target.placeholder = '')}\n              onChange={(e) => this.setState({ text: e.target.value })}\n            />\n            <DatePicker\n              placeholderText='Enter Date'\n              selected={this.state.date}\n              value={this.state.date}\n              onChange={(date) => this.setState({ date: date })}\n              showTimeSelect\n            />\n\n            <button\n              className='btn btn-primary btn-block'\n              onClick={() => {\n                this.props.AddFunction(this.state.text, this.state.date)\n                this.setState({\n                  text: '',\n                  date: '',\n                })\n              }}\n            >\n              Add\n            </button>\n            {this.mapOnData()}\n            <button\n              className='btn btn-danger btn-block'\n              onClick={this.props.ClearFunction}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </main>\n    )\n  }\n}\n\n// function MapDispatchToProps(dispatch) {\n//   return {\n//     add_reminder: dispatch(Add_Reminder()),\n//   }\n// }\nfunction mapStateToProps(state) {\n  return { data: state }\n}\nexport default connect(mapStateToProps, {\n  AddFunction,\n  RemoveFunction,\n  ClearFunction,\n})(App)\n","import { ADD_REMINDER, CLEAR_REMINDERS, REMOVE_REMINDER } from '../types/index'\nexport const AddFunction = (text, date) => {\n  const action = {\n    type: ADD_REMINDER,\n    text,\n    date,\n  }\n  console.log('action file ', action)\n  return action\n}\n\nexport const RemoveFunction = (id) => {\n  const action = {\n    type: REMOVE_REMINDER,\n    id,\n  }\n  return action\n}\nexport const ClearFunction = () => {\n  const action = {\n    type: CLEAR_REMINDERS,\n  }\n  return action\n}\n","import { ADD_REMINDER, CLEAR_REMINDERS, REMOVE_REMINDER } from '../types/index'\nimport { bake_cookie, read_cookie } from 'sfcookies'\nconst Reminder = (state = [], action) => {\n  state = read_cookie('reminders')\n  let reminders = null\n  if (action.type === ADD_REMINDER) {\n    reminders = [\n      ...state,\n      { text: action.text, date: action.date, id: Math.random() },\n    ]\n    bake_cookie('reminders', reminders)\n    console.log('Reducer file', reminders)\n    return reminders\n  } else if (action.type === REMOVE_REMINDER) {\n    reminders = state.filter((reminder) => reminder.id !== action.id)\n    bake_cookie('reminders', reminders)\n\n    return reminders\n  } else if (action.type === CLEAR_REMINDERS) {\n    bake_cookie('reminders', reminders)\n    reminders = []\n    return reminders\n  } else {\n    return state\n  }\n}\n\nexport default Reminder\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport App from './Component/App/App'\nimport Reminder from './Component/reducer/index'\nimport './style.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nconst store = createStore(Reminder)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}